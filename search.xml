<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用StreamCMD在Windows上搭建饥荒服务器</title>
      <link href="2021/01/27/don-t-starve-together-dedicated-server/"/>
      <url>2021/01/27/don-t-starve-together-dedicated-server/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于唯一的一台Linux服务器被征用，只能在Windows上搭建饥荒的服务器了。如果在游戏内开房间的话有太多的限制，所以就选择了像Linux一样运行一个独立的饥荒服务器。写下此文，备用。</p></blockquote><h2 id="SteamCMD部分"><a href="#SteamCMD部分" class="headerlink" title="SteamCMD部分"></a>SteamCMD部分</h2><ol><li>下载SteamCMD。前往<a href="https://developer.valvesoftware.com/wiki/SteamCMD#Windows]">https://developer.valvesoftware.com/wiki/SteamCMD#Windows</a>下载Windows版的SteamCMD，得到一个压缩包，里面包含steamcmd.exe，选择一个目录解压，假设解压在C盘根目录下的SteamCMD<br>此时的文件结构：C:\</li><li>初始化SteamCMD。双击循行steamcmd，它会自动下载部分资源，下载完成后会有类似<code>Steam&gt;</code>的命令提示符。</li><li>登录SteamCMD。输入<code>login anonymous</code>登录到Steam匿名账号。（注意登陆后还是提示<code>Steam&gt;</code>，命令提示符没有任何变化）</li><li>下载Don’t Starve Together Dedicated。输入<code>app_update 343050 validate</code>下载软件，其中343050是他的编号，validate表示下载完成后进行验证。</li></ol><h2 id="饥荒服务器部分"><a href="#饥荒服务器部分" class="headerlink" title="饥荒服务器部分"></a>饥荒服务器部分</h2><ol><li>建立文件夹。打开<code>文档</code>-<code>Klei</code>-<code>DoNotStarveTogether</code>新建一个文件夹<code>MyDedicatedServer</code>,然后在里边再新建两个文件夹以及一个文件,文件夹分别为<code>Caves</code>以及<code>Master</code>，文件为<code>cluster.ini</code>，并且将下列文本复制粘贴进去：<pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[GAMEPLAY]</span><span class="token constant"> game_mode</span> <span class="token attr-value"><span class="token punctuation">=</span> survival</span><span class="token constant"> max_players</span> <span class="token attr-value"><span class="token punctuation">=</span> 6</span><span class="token constant"> pvp</span> <span class="token attr-value"><span class="token punctuation">=</span> false</span><span class="token constant"> pause_when_empty</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span class="token selector"> [NETWORK]</span><span class="token constant"> cluster_name</span> <span class="token attr-value"><span class="token punctuation">=</span> 服务器名称</span><span class="token constant"> cluster_description</span> <span class="token attr-value"><span class="token punctuation">=</span> 服务器描述</span><span class="token constant"> cluster_password</span> <span class="token attr-value"><span class="token punctuation">=</span> 服务器密码</span><span class="token constant"> cluster_intention</span> <span class="token attr-value"><span class="token punctuation">=</span> cooperative</span><span class="token constant"> whitelist_slots</span> <span class="token attr-value"><span class="token punctuation">=</span> 0 </span><span class="token constant"> cluster_language</span> <span class="token attr-value"><span class="token punctuation">=</span> zh</span><span class="token selector"> [MISC]</span><span class="token constant"> console_enabled</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span class="token selector"> [SHARD]</span><span class="token constant"> shard_enabled</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span class="token constant"> bind_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span><span class="token constant"> master_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span><span class="token constant"> master_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 11001</span><span class="token constant"> cluster_key</span> <span class="token attr-value"><span class="token punctuation">=</span> dst</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>部分字段说明：<table><thead><tr><th align="center">字段</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">game_mode</td><td align="center">游戏模式，可选：survival, endless, wilderness</td></tr><tr><td align="center">max_players</td><td align="center">最大在线玩家数</td></tr><tr><td align="center">pvp</td><td align="center">是否允许玩家间进行对战</td></tr><tr><td align="center"><strong>pause_when_empty</strong></td><td align="center"><strong>服务器内没有玩家时暂停</strong></td></tr><tr><td align="center">cluster_name</td><td align="center">服务器名称</td></tr><tr><td align="center">cluster_description</td><td align="center">服务器描述</td></tr><tr><td align="center">cluster_password</td><td align="center">服务器密码，留空表示没有</td></tr><tr><td align="center">cluster_intention</td><td align="center">游戏风格，可选：cooperative,competitive,social,madness，仅作描述，无实际用途</td></tr><tr><td align="center">whitelist_slots</td><td align="center">为白名单用户预留的位置</td></tr><tr><td align="center">cluster_language</td><td align="center">服务器语言</td></tr><tr><td align="center">console_enabled</td><td align="center">是否开启控制台（作弊用）</td></tr><tr><td align="center">max_snapshots</td><td align="center">最大快照数，即可回滚的天数</td></tr><tr><td align="center">shard_enabled</td><td align="center">服务器共享，开启洞穴的服务器必须设置为true</td></tr><tr><td align="center">bind_ip</td><td align="center">服务器监听地址</td></tr><tr><td align="center">master_ip</td><td align="center">master服务器的IP</td></tr><tr><td align="center">master_port</td><td align="center">监听master服务器的UDP端口，所有连接至master服务器的非master服务器必须相同</td></tr><tr><td align="center">cluster_key</td><td align="center">连接密码，每台服务器必须相同</td></tr></tbody></table></li><li>前往KLei官网获取token。鉴于部分网络通过浏览器打开官网无法通过steam登录，这里我们通过饥荒客户端主界面的<code>账号</code>打开KLei官网，就可以自动登录。登陆后默认的打开用户信息，点击<code>游戏</code>-<code>《饥荒：联机版》的游戏服务器</code>，然后再<code>添加新服务器</code>这里任意输入一个服务器名字，然后<code>添加新服务器</code>，就可以获得token,复制下来。在前面新建的<code>MyDedicatedServer</code>目录下新建文件<code>cluster_token.txt</code>，将token粘贴进去保存。</li><li>配置地图。在master目录内，新建<code>server.ini</code>文件，复制粘贴如下文本：<pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[NETWORK]</span><span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 10999</span><span class="token selector">[SHARD]</span><span class="token constant">is_master</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span class="token selector">[ACCOUNT]</span><span class="token constant">encode_user_path</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 同理，进入<code>Caves</code>目录，新建`server.ini文件，复制粘贴如下文本： <pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token selector">[NETWORK]</span><span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 10998</span><span class="token selector">[SHARD]</span><span class="token constant">is_master</span> <span class="token attr-value"><span class="token punctuation">=</span> false</span><span class="token constant">name</span> <span class="token attr-value"><span class="token punctuation">=</span> Caves</span><span class="token constant">id</span> <span class="token attr-value"><span class="token punctuation">=</span> 1331760033</span><span class="token selector">[ACCOUNT]</span><span class="token constant">encode_user_path</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span class="token selector">[STEAM]</span><span class="token constant">master_server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 27017</span><span class="token constant">authentication_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 8767</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>那么，服务器部分基本配置完毕。<h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2>在桌面新建一个名为<code>startDST.bat</code>的文件，右键-编辑，用记事本打开，复制如下文本粘贴进去并保存：<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd "c:\steamcmd\steamapps\common\Don't Starve Together Dedicated Server\bin"start dontstarve_dedicated_server_nullrenderer -console -cluster MyDedicatedServer -shard Masterstart dontstarve_dedicated_server_nullrenderer -console -cluster MyDedicatedServer -shard Caves<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>之后双击<code>startDST.bat</code>就可以启动服务器了。</li></ol><p>至于如何迁徙存档以及配置mod，改日再更。</p>]]></content>
      
      
      <categories>
          
          <category> Tutorials </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Game </tag>
            
            <tag> Dont&#39;t Starve Together </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各数据类型大小</title>
      <link href="2021/01/27/data-words/"/>
      <url>2021/01/27/data-words/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">数据类型</th><th align="center">16位编译器</th><th align="center">32位编译器</th><th align="center">64位编译器</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">1字节</td><td align="center">1字节</td><td align="center">1字节</td></tr><tr><td align="center">char*</td><td align="center">2字节</td><td align="center">4字节</td><td align="center">8字节</td></tr><tr><td align="center">short int</td><td align="center">2字节</td><td align="center">2字节</td><td align="center">2字节</td></tr><tr><td align="center">int</td><td align="center">2字节</td><td align="center">4字节</td><td align="center">4字节</td></tr><tr><td align="center">unsigned int</td><td align="center">2字节</td><td align="center">4字节</td><td align="center">4字节</td></tr><tr><td align="center">float</td><td align="center">4字节</td><td align="center">4字节</td><td align="center">4字节</td></tr><tr><td align="center">double</td><td align="center">8字节</td><td align="center">8字节</td><td align="center">8字节</td></tr><tr><td align="center">long</td><td align="center">4字节</td><td align="center">4字节</td><td align="center">8字节</td></tr><tr><td align="center">long long</td><td align="center">8字节</td><td align="center">8字节</td><td align="center">8字节</td></tr><tr><td align="center">unsigned long</td><td align="center">4字节</td><td align="center">4字节</td><td align="center">8字节</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些诗</title>
      <link href="2021/01/06/poems-2020/"/>
      <url>2021/01/06/poems-2020/</url>
      
        <content type="html"><![CDATA[<blockquote><p>时间：2020年05月06日</p></blockquote><p>小镇农人皆酣睡，夏夜凉风迎面吹。</p><p>圆月高高依旧照，古时枯骨几轮回？</p><p><img src="https://raw.githubusercontent.com/wenfa1999/PicGO/master/20210127120317.jpg" alt="那时候拍的照片"></p><hr><blockquote><p>时间：2020年12月11日</p></blockquote><p>他们来了，他们喜光。</p><p>于是毫无征兆地，那里充满了光。</p><p>欢声笑语愈加热烈，那么原先在这里的蝎子们呢？</p><p>他们不知道，大家都不知道。</p><br>于是，蝎子们一部分变成了他们，另一部分选择迁徙。<p>但是这都无关紧要，</p><p>因为他们，为这儿带来了光。</p><p>突然，还有零星可数的蝎子，</p><p>在他们脚下，用尽最后的一丝力气，举起了尾巴；</p><p>象征性地。</p><blockquote><p>时间：2018年12月20日</p></blockquote><p>东风未暖冬意浓，</p><p>雁落何方行色匆。</p><p>最是一年临尽日，</p><p>美得学子尽忘钟。</p>]]></content>
      
      
      <categories>
          
          <category> poems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Poems </tag>
            
            <tag> Literature </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KMP算法</title>
      <link href="2020/12/04/kmp-algorithm/"/>
      <url>2020/12/04/kmp-algorithm/</url>
      
        <content type="html"><![CDATA[<h2 id="发明者"><a href="#发明者" class="headerlink" title="发明者"></a>发明者</h2><p>D.E.Knuth，J.H.Morris 和 V.R.Pratt</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="1-根据待查找字符串建立一张表"><a href="#1-根据待查找字符串建立一张表" class="headerlink" title="1.  根据待查找字符串建立一张表"></a>1.  根据待查找字符串建立一张表</h3><p><img src="https://raw.githubusercontent.com/wenfa1999/PicGO/master/1606957836731.gif?token=AF32REJVC2R5EDTPW4WZL7K7ZA5WG" alt="建表"></p><blockquote><ol><li>根据待查找字符串 target 的长度建立数组 table，数组长度为代待查字符串的长度。</li><li>列出待查字符串的所有前缀子字符串。</li><li>从数组下标为 1 处开始填写最长公共前后缀长度，同时 table[0]=-1。</li></ol></blockquote><p><strong>最长公共前后缀的计算（以 target 为”ababca”为例）</strong></p><pre class="line-numbers language-none"><code class="language-none">a：公共前后缀为 0（很明显，长度为 1 的字串公共前后缀恒为 0，即 table[1]=0）。ab：公共前后缀为 0，即 table[2]=0。aba：最长公共前后缀为 1，因为首位均为 a，即 table[3]=1。abab：最长公共前后缀为“ab”，即 table[4]=2。ababc：公共前后缀为 0，即 table[5]=0。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后整张表内容如下：</p><table><thead><tr><th align="center">Name</th><th align="center">0</th><th align="center">1</th><th align="center">2</th><th align="center">3</th><th align="center">4</th><th align="center">5</th></tr></thead><tbody><tr><td align="center">table</td><td align="center">-1</td><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">0</td></tr></tbody></table><p><strong>发现规律：</strong> 从第一个前缀子字符串a开始，往后下一个前缀子字符串如果在前一个最长公共前后缀的最后一位的下标的下一位与最后一个字符相等，则该字串的最长公共前后缀为前一字串的最长公共前后缀+1；否则为0。</p><h3 id="2-开始匹配"><a href="#2-开始匹配" class="headerlink" title="2. 开始匹配"></a>2. 开始匹配</h3><p><img src="https://raw.githubusercontent.com/wenfa1999/PicGO/master/1606960777573.gif?token=AF32REPWR3TF32FXNEPHZKS7ZBDOY" alt="匹配"></p><p><strong>匹配规则</strong></p><blockquote><p>两个指针i和j分别指向源字符串和目标字符串的第0位字符。<br>如果匹配相等，i和j分别往后移。<br>如果匹配不相等，那么取出此时table表中同个下标对应的值index，并让j指向目标字符串以index为下标的值。</p></blockquote><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><strong>C++：</strong></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span>  </span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>  <span class="token keyword">void</span> <span class="token function">NEXT</span><span class="token punctuation">(</span><span class="token keyword">const</span> string <span class="token operator">&amp;</span>T<span class="token punctuation">,</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span>next<span class="token punctuation">)</span>  <span class="token punctuation">{</span>      <span class="token comment">//按模式串生成vector,next(T.size())     </span>    next<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> T<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>          <span class="token keyword">int</span> j <span class="token operator">=</span> next<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token keyword">while</span><span class="token punctuation">(</span>T<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> T<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>              j <span class="token operator">=</span> next<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token comment">//递推计算  </span>        <span class="token keyword">if</span><span class="token punctuation">(</span>T<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> T<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                  next<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>          <span class="token keyword">else</span>                  next<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  string<span class="token operator">::</span>size_type <span class="token function">COUNT_KMP</span><span class="token punctuation">(</span><span class="token keyword">const</span> string <span class="token operator">&amp;</span>S<span class="token punctuation">,</span><span class="token keyword">const</span> string <span class="token operator">&amp;</span>T<span class="token punctuation">)</span>  <span class="token punctuation">{</span>      <span class="token comment">//利用模式串T的next函数求T在主串S中的个数count的KMP算法  </span>    <span class="token comment">//其中T非空，  </span>    vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span>   <span class="token function">next</span><span class="token punctuation">(</span>T<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">NEXT</span><span class="token punctuation">(</span>T<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>      string<span class="token operator">::</span>size_type index<span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> S<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>index<span class="token punctuation">)</span>      <span class="token punctuation">{</span>          <span class="token keyword">int</span> pos<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>          string<span class="token operator">::</span>size_type iter <span class="token operator">=</span> index<span class="token punctuation">;</span>          <span class="token keyword">while</span><span class="token punctuation">(</span>pos <span class="token operator">&lt;</span> T<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> iter<span class="token operator">&lt;</span>S<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token punctuation">{</span>                 <span class="token keyword">if</span><span class="token punctuation">(</span>S<span class="token punctuation">[</span>iter<span class="token punctuation">]</span> <span class="token operator">==</span> T<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">)</span>              <span class="token punctuation">{</span>                  <span class="token operator">++</span>iter<span class="token punctuation">;</span>                  <span class="token operator">++</span>pos<span class="token punctuation">;</span>              <span class="token punctuation">}</span>              <span class="token keyword">else</span>              <span class="token punctuation">{</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span>pos <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                      <span class="token operator">++</span>iter<span class="token punctuation">;</span>                  <span class="token keyword">else</span>                      pos <span class="token operator">=</span> next<span class="token punctuation">[</span>pos <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>          <span class="token punctuation">}</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>pos <span class="token operator">==</span> T<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>iter <span class="token operator">-</span> index<span class="token punctuation">)</span> <span class="token operator">==</span> T<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token operator">++</span>count<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">return</span> count<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>            string S<span class="token punctuation">,</span>T<span class="token punctuation">;</span>      cout<span class="token operator">&lt;&lt;</span><span class="token string">"请输入主串（参照的）"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>      cin<span class="token operator">&gt;&gt;</span>S<span class="token punctuation">;</span>      cout<span class="token operator">&lt;&lt;</span><span class="token string">"请输入子串（要查找的）"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>      cin<span class="token operator">&gt;&gt;</span>T<span class="token punctuation">;</span>      string<span class="token operator">::</span>size_type count <span class="token operator">=</span><span class="token function">COUNT_KMP</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span>T<span class="token punctuation">)</span><span class="token punctuation">;</span>      cout<span class="token operator">&lt;&lt;</span><span class="token string">"一共有 "</span><span class="token operator">&lt;&lt;</span>count<span class="token operator">&lt;&lt;</span><span class="token string">" 个子串"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/09/26/hello-world/"/>
      <url>2020/09/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>WIndows10上VMWare安装Ubuntu</title>
      <link href="2020/02/01/vmware-win/"/>
      <url>2020/02/01/vmware-win/</url>
      
        <content type="html"><![CDATA[<h2 id="Ubuntu系统镜像下载"><a href="#Ubuntu系统镜像下载" class="headerlink" title="Ubuntu系统镜像下载"></a>Ubuntu系统镜像下载</h2><p>前往Ubuntu官网<a href="https://ubuntu.com/download/desktop">https://ubuntu.com/download/desktop</a>下载镜像，这里选择的是Ubuntu 20.04.1 LTS，带有LTS的版本表示长期维护版本，譬如Ubuntu 20.04.1 LTS就会支持到2025年4月。当然也可以下载其他版本，对于大部分个人用户而言并无太大区别。</p><p>当然也可以前往国内镜像网站镜像下载，譬如阿里云镜像站<a href="https://mirrors.aliyun.com/">https://mirrors.aliyun.com/</a>。注意需要点击的是OS镜像，而不是镜像列表下的各个系统。</p><h2 id="VMWare安装Ubuntu"><a href="#VMWare安装Ubuntu" class="headerlink" title="VMWare安装Ubuntu"></a>VMWare安装Ubuntu</h2><h3 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h3><blockquote><ol><li>打开VMWare-<strong>创建新的虚拟机</strong>；</li><li><strong>典型(推荐)（T）</strong>，下一步；</li><li><strong>安装客户机操作系统</strong>，这里要注意选择**稍后安装操作系统(S)**，下一步；</li><li>客户机操作系统选择<strong>Linux(L)**，版本选择</strong>Ubuntu64位**，下一步；</li><li>虚拟机名称自定义，位置推荐放在专门的有较大剩余空间的文件夹下，下一步；</li><li>磁盘容量20G以上，如果准备长期使用或者在里边存一些工作/学习文件建议40G起步，下一步；</li><li>完成。</li></ol></blockquote><p><strong>开启虚拟机前需要先添加系统镜像</strong>，点击<strong>编辑虚拟机设置</strong>，在<strong>CD/DVD</strong>选项下选择*<em>使用ISO映像文件(M)**，然后点击</em>浏览*，选择下载好的系统镜像。选择好后点击确定。</p><h3 id="开启虚拟机"><a href="#开启虚拟机" class="headerlink" title="开启虚拟机"></a>开启虚拟机</h3><p>首先是磁盘检查，可以鼠标单机虚拟机屏幕，然后输入<code>ctrl + C</code>跳过。</p><p>进入向导界面，选择语言”中文”，当然按照自己的需求进行选择。</p><p>点击“安装 Ubuntu”(Install Ubuntu)，键盘布局默认就好，点击继续。</p><p><strong>更新和其它软件</strong>，选择最小安装或者正常安装都行，关掉<strong>安装Ubuntu时下载更新</strong>。</p><blockquote><p>因为此时的服务器用的是官方服务器，下载速度会比较慢，可以先安装系统，安装完成后<strong>换源</strong>再进行更新。</p></blockquote><p><strong>安装类型</strong>默认是清除整个磁盘并安装Ubuntu，直接点击<strong>现在安装</strong>。</p><p>时区自选，然后是账户信息，同样自定义，输入完成无误后点击<strong>继续</strong>。</p><p>开始安装。</p><blockquote><p>在复制完文件后可能会进行一下下载，可以点击左侧三角形展开，在下载的时候点击右边的<strong>Skip</strong>暂时跳过这些步骤，同理是为了节省时间。</p></blockquote><p>安装完成后重启。</p><h2 id="一些需要的配置"><a href="#一些需要的配置" class="headerlink" title="一些需要的配置"></a>一些需要的配置</h2><p>重启后登录账户。</p><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>点击左下角九宫格图标<strong>显示应用程序</strong>，找到<strong>软件和更新</strong>打开。</p><blockquote><p>隔壁会有一个叫<strong>软件更新器</strong>的，长得非常像，一般来说右边的是我们要打开的软件。</p></blockquote><p>打开后可以看到有个“中国 的服务器”，点击，然后选择”其他站点…“，然后在中国列表下选择一个镜像源，个人习惯选择阿里云的(mirrors.aliyun.com)，选择好后点击“选择服务器”，会有弹窗需要输入密码。确定密码后返回，点击“关闭”，会提醒可用软件的列表信息已过时，点击“重新载入(R)”，更新软件列表。</p><h3 id="下载-更新软件"><a href="#下载-更新软件" class="headerlink" title="下载/更新软件"></a>下载/更新软件</h3><p>在桌面<em>右键</em>-<em>在终端中打开</em>，打开Ubuntu的终端。输入下面的命令：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo apt update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入后键入回车，会提示输入密码，注意在终端中输入Linux用户密码并不会有任何的显示，输入完成后再键入回车。</p><p>执行完上面的命令后一般会提示有很多软件可以进行更新，先不管，而是接着输入下面的命令：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo apt -y install open-vm-tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个就相当于以往的VMWare Tools，不过这个版本安装更为简便。</p><p>安装完成后有一个很明显的现象：Ubuntu屏幕大小变成了VMWare虚拟机的屏幕大小，并且可以随意改变屏幕大小。</p><p>然后是下一条命令：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo apt -y upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令就是在下更新软件，相当于安装过程中为了节省时间而关闭的下载更新。</p><h2 id="VMWare注意事项"><a href="#VMWare注意事项" class="headerlink" title="VMWare注意事项"></a>VMWare注意事项</h2><blockquote><p> 对于大部分笔记本来说一般都会有两个以上的网卡(以太网以及WIFI)，部分电脑的虚拟机可能会偶尔没有网络，可以进行手动设置。</p></blockquote><p>点击VMWare菜单栏的<strong>编辑(E)**，</strong>虚拟网络编辑器**。</p><p>点击下方的**更改设置(C)**，会申请管理员权限，确定并重新加载完成后可以看到，桥接模式默认是桥接至自动，我们可以在虚拟机系统没有网络的时候试着手动选择对应的网卡，确定后虚拟机内部系统应该就有网络了。</p><blockquote><p>当然大部分情况下是不需要手动设置的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tutorials </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMWare </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Windows10 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
